
cache:
  paths:
    - vendor/

stages:
  - build
  - ssl
  - deploy
variables:
  REGISTRY: "registry.gitlab.com/builditkz/mashrooms-bot"

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  tags:
    - build
  script:
    - docker build -t "$REGISTRY/app:latest" -f ./docker/Dockerfile .
    - docker push "$REGISTRY/app:latest"
  only:
    changes:
        - ./docker/php.ini
        - ./docker/Dockerfile
        - ./docker/php-fpm.conf
        - ./docker/nginx/conf.d/nginx.conf

ssl:
  stage: ssl
  tags:
    - cicd
  script:
    - docker compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ --email kaknebud@gmail.com -d msh.kz --no-eff-email --agree-tos
    # - docker compose run --rm certbot renew
  when: manual

deploy:
  stage: deploy
  tags:
    - cicd
  script:
    - export CONTAINER_PREFIX=mashrooms_bot
    - docker stop $(docker ps -a | grep ${CONTAINER_PREFIX}_ | awk '{print $1}') || true
    - docker rm $(docker ps -a | grep ${CONTAINER_PREFIX}_ | awk '{print $1}') || true
    - docker volume rm $(docker volume ls | grep ${CONTAINER_PREFIX}_ | awk '{print $2}') || true
    - docker compose -p $CONTAINER_PREFIX -f docker-compose.yml up -d
    # - docker exec ${CONTAINER_PREFIX}_app composer update
    - docker exec ${CONTAINER_PREFIX}_app composer install --no-dev --optimize-autoloader
    - docker exec ${CONTAINER_PREFIX}_app php artisan migrate
    # - docker exec ${CONTAINER_PREFIX}_app php artisan migrate:fresh --seed
    # - docker exec ${CONTAINER_PREFIX}_app php artisan db:seed --class=OperationTypeSeeder
    - docker exec ${CONTAINER_PREFIX}_app php artisan cache:clear
    - docker exec ${CONTAINER_PREFIX}_app php artisan config:cache
    - docker exec ${CONTAINER_PREFIX}_app php artisan route:cache
    # - docker exec ${CONTAINER_PREFIX}_app php artisan infobot:start
  only:
    - main
